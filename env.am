# Copyright (C) 2016 David Gao <davidgao1001@gmail.com>
# Copyright (C) 2016 Gan Quan <coin2028@hotmail.com>
#
# This file is part of AIMv6.
#
# AIMv6 is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# AIMv6 is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# AM_*FLAGS are applied when no target_*FLAGS are given, or when directly
# included in target_*FLAGS. Final values of these flags are used in the AIMv6
# kernel. Here we construct the base of all flags.

AM_CPPFLAGS_BASE = \
	-nostdinc \
	-I$(top_srcdir)/include/arch/$(ARCH)/mach-$(MACH) \
	-I$(top_srcdir)/include/arch/$(ARCH) \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/lib
# FIXME: check for -fplan9-extensions during configure.
# see https://gcc.gnu.org/onlinedocs/gcc/Unnamed-Fields.html for details.
AM_CFLAGS_BASE = -Wall -fplan9-extensions
AM_CCASFLAGS_BASE =
AM_LDFLAGS_BASE = -nostdlib

# Tweak flags according to ARCH and MACH.

if ARCH_ARMV7A
AM_LDFLAGS_BASE += -lgcc
endif

if ARCH_MIPS32
AM_CFLAGS_BASE += -mips32 -mabi=32 -EL
AM_CCASFLAGS_BASE += -mips32 -mabi=32 -EL
endif

if ARCH_I386
AM_CFLAGS_BASE += -m32
AM_CCASFLAGS_BASE += -m32
endif

if MACH_ZYNQ
AM_CFLAGS_BASE += -mtune=cortex-a9
endif

# We don't want to introduce PIC in firmware and bootloader, but we have
# to make kernel code position independent. Flags differ quite a lot between
# these two scenarios, so we construct a seperate set of FLAGS for explicit
# use with RAW targets, namely firmware and bootloader.
# Here we copy flag variables and tweak them for RAW targets.

AM_CPPFLAGS_NOPIC = $(AM_CPPFLAGS_BASE) -fno-pic -DRAW
AM_CFLAGS_NOPIC = $(AM_CFLAGS_BASE) -fno-pic
AM_CCASFLAGS_NOPIC = $(AM_CCASFLAGS_BASE)
AM_LDFLAGS_NOPIC = $(AM_LDFLAGS_BASE)

# Then, we tweak flags for the kernel targets.

AM_CPPFLAGS = $(AM_CPPFLAGS_BASE) -fPIC
AM_CFLAGS = $(AM_CFLAGS_BASE) -fPIC
AM_CCASFLAGS = $(AM_CCASFLAGS_BASE)
AM_LDFLAGS = $(AM_LDFLAGS_BASE)

# Almost done, one last tweak according to ARCH and MACH.

if ARCH_MIPS32
AM_CFLAGS += -G 0 -mabicalls
AM_CCASFLAGS += -G 0 -Wa,-KPIC -mabicalls
AM_CFLAGS_NOPIC += -mno-abicalls
AM_CCASFLAGS_NOPIC += -mno-abicalls
endif

if ARCH_MIPS64
AM_CFLAGS += -mips64r2 -mabi=64 -mno-abicalls -EL -fno-pic
AM_CCASFLAGS += -mips64r2 -mabi=64 -mno-abicalls -EL
endif

SUFFIXES = .elf .bin .s
.elf.bin:
	$(OBJCOPY) -O binary -S $^ $@
.elf.s:
	$(OBJDUMP) -d $^ > $@

